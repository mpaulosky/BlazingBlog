# This workflow will build a .NET project
# For more information see: https://docs.github.com/en/actions/automating-builds-and-tests/building-and-testing-net

name: .NET Build

on:
  push:
    branches: [ "main" ]
    paths:
      - 'src/**'
      - 'tests/**'
  pull_request:
    branches: [ "*" ]
    paths:
      - 'src/**'
      - 'tests/**'
  workflow_dispatch:

jobs:
  build:

    runs-on: ubuntu-latest

    env:
      NUGET_PACKAGES: ${{ github.workspace }}/.nuget/packages

    steps:
      - uses: actions/checkout@v4
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          global-json-file: global.json

      - name: Restore dependencies
        run: dotnet restore

      - name: Build
        run: dotnet build --no-restore

      - name: Run Tests
        run: dotnet test UnitTests.slnf --no-build --logger trx --results-directory "test-results"

      - name: Publish Test Results
        uses: EnricoMi/publish-unit-test-result-action@v2
        id: test-results
        if: always()
        with:
          files: |
            test-results/**/*.xml
            test-results/**/*.trx
            test-results/**/*.json

      - name: Upload Event File
        uses: actions/upload-artifact@v4
        with:
          name: Event File
          path: ${{ github.event_path }}

      - name: Upload Test Results
        if: always()
        uses: actions/upload-artifact@v4
        with:
          name: Test Results
          path: TestResults

      - name: Codecov
        uses: codecov/codecov-action@v5.1.1

      - name: Upload dotnet test results
        uses: actions/upload-artifact@v4
        with:
          name: BlazorApp-test-results
          path: TestResults

      - name: Install GitVersion
        uses: gittools/actions/gitversion/setup@v3.0.3
        with:
          versionSpec: "5.x"

      - name: Use GitVersion
        id: gitversion # step id used as reference for output values
        uses: gittools/actions/gitversion/execute@v3.0.3
      - run: |
          echo "FullSemVer: ${{ steps.gitversion.outputs.fullSemVer }}"

        # Use always() to always run this step to
        # publish test results when there are test failures
        if: ${{ always() }}