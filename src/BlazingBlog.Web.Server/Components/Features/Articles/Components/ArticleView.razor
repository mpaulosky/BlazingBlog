@page "/article/{ArticleId:int}"
@using BlazingBlog.Application.Articles.GetArticleByIdForEditing
@using BlazingBlog.WebUI.Server.Features.Articles

@inject ISender Sender

<PageTitle>View Article"</PageTitle>

<div class="space-y-6">
	<h2 class="text-3xl font-extrabold text-gray-50">View Article</h2>
</div>

@if (!string.IsNullOrEmpty(_errorMessage))
{

	<h2 class="text-3xl font-extrabold text-danger">Error</h2>
	<p class="text-2xl text-danger font-bold">@_errorMessage</p>

}
else if (_article is not null)
{

	<div class="space-y-1">
		<h3 class="text-2xl font-bold tracking-tight">@_article.Title</h3>
		<span class="text-xl-start text-gray-400">
			<time>@_article.PublishedOn</time>
			<span>by @_article.UserName</span>
		</span>
		<p class="text-2xl text-gray-50">@_article.Content</p>

		@if (_article.CanEdit)
		{
			<span>
				<a href="/article-editor/@_article.Id" class="text-s text-violet-600 hover:text-blue-700">Edit Article</a>
			</span>
		}

	</div>

}


@code {

	[Parameter] public int ArticleId { get; set; }

	private ArticleModel? _article;

	private string _errorMessage = string.Empty;

	protected override async Task OnParametersSetAsync()
	{

		var result = await Sender.Send(new GetArticleByIdForEditingQuery() { Id = ArticleId });

		if (result is { Success: true, Value: not null })
		{

			_article = result.Value.Adapt<ArticleModel>();

		}
		else
		{

			_errorMessage = result.Error ?? "Sorry, something went wrong.";

		}

	}

}